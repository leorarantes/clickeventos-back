// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  events      Events[]
  tickets     Tickets[]

  @@map("users")
}

model Events {
  id                 Int       @id @default(autoincrement())
  name               String
  price              Float
  dateTime           DateTime
  description        String
  manager            Users     @relation(fields: [managerId], references: [id])
  managerId          Int
  createdAt          DateTime  @default(now())
  eventsPhotos       EventsPhotos[]
  eventsPix          EventsPix[]
  eventsBankAccounts EventsBankAccounts[]
  tickets            Tickets[]

  @@map("events")
}

model EventsPhotos {
  id          Int       @id @default(autoincrement())
  photo       String    @unique
  event       Events    @relation(fields: [eventId], references: [id])
  eventId     Int
  createdAt   DateTime  @default(now())

  @@map("eventsPhotos")
}

model EventsPix {
  id          Int       @id @default(autoincrement())
  key         String
  event       Events    @relation(fields: [eventId], references: [id])
  eventId     Int
  createdAt   DateTime  @default(now())

  @@map("eventsPix")
}

model EventsBankAccounts {
  id              Int       @id @default(autoincrement())
  agency          String
  account         String
  bank            String
  holderName      String
  event           Events    @relation(fields: [eventId], references: [id])
  eventId         Int
  createdAt       DateTime  @default(now())
  bankAccountsCpf BankAccountsCpfs[]

  @@map("eventsBankAccounts")
}

model BankAccountsCpfs {
  id            Int                 @id @default(autoincrement())
  cpf           String
  bankAccount   EventsBankAccounts  @relation(fields: [bankAccountId], references: [id])
  bankAccountId Int
  createdAt     DateTime            @default(now())

  @@map("bankAccountsCpf")
}

model Tickets {
  id             Int       @id @default(autoincrement())
  ticket         String    @unique
  paymentVoucher String    @unique
  event          Events    @relation(fields: [eventId], references: [id])
  eventId        Int
  user           Users     @relation(fields: [userId], references: [id])
  userId         Int
  createdAt      DateTime  @default(now())

  @@map("tickets")
}


